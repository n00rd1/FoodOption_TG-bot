const sqlite3 = require('sqlite3').verbose();
const db = new sqlite3.Database('users.db');
require('dotenv').config();
// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–æ—Ç–µ
const {TELEGRAM_BOT_TOKEN, ADMIN_ID} = process.env, TelegramApi = require('node-telegram-bot-api'),
bot = new TelegramApi(TELEGRAM_BOT_TOKEN, {polling: true});

db.run(`CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER UNIQUE, username TEXT, phone_number TEXT, body_weight REAL DEFAULT 0, body_fat_percentage REAL DEFAULT 0, physical_activity_coefficient REAL DEFAULT 0, gender TEXT DEFAULT '–ú', state TEXT DEFAULT '–ü–æ—Ö—É–¥–µ—Ç—å', calories REAL DEFAULT 0);`);

// TODO: –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –¥–æ—Å—Ç–∞–≤–∫–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–¥–µ—Ä–∂–∫–∞ –∏–ª–∏ –æ—Ç–º–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤–∫–∏ —Å–µ–≥–æ–¥–Ω—è)
// TODO: ----------------------------------------------------------------
// TODO: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ë–î

// TODO: –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–≥—Ä—É–∑–∫—É state –∏ —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
// TODO: –î–æ–¥–µ–ª–∞—Ç—å –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ú/–ñ –ø–æ–ª–∞
// TODO: —Å–¥–µ–ª–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ú/–ñ
// TODO: –î–æ–¥–µ–ª–∞—Ç—å –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –í–µ—Å–∞
// TODO: —Å–¥–µ–ª–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –í–µ—Å–∞
// TODO: –î–æ–¥–µ–ª–∞—Ç—å –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ñ–∏—Ä–∞
// TODO: —Å–¥–µ–ª–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ñ–∏—Ä–∞
// TODO: –î–æ–¥–µ–ª–∞—Ç—å –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ö–∞–ª–æ—Ä–∏–π (+ –∏–ª–∏ -)
// TODO: —Å–¥–µ–ª–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ö–∞–ª–æ—Ä–∏–π (+ –∏–ª–∏ -)

/*
    ‚öñÔ∏è –û–±—â–∞—è –º–∞—Å—Å–∞ —Ç–µ–ª–∞ / –∫–≥ ‚öñÔ∏è
    ü§∏‚Äç‚ôÄÔ∏è % –∂–∏—Ä–∞ ü§∏‚Äç‚ôÄÔ∏è
    üçΩÔ∏è –î–µ—Ñ–∏—Ü–∏—Ç –∫–∞–ª–æ—Ä–∏–π üìâ
    üçî –ü—Ä–æ—Ñ–∏—Ü–∏—Ç –∫–∞–ª–æ—Ä–∏–π üìà
*/

// –†–µ–∞–∫—Ü–∏—è –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–Ω—Ç–∞–∫—Ç–∞
bot.on('contact', async (msg) => {
    const phoneNumber = msg.contact.phone_number;
    const username = msg.chat.username || 'unknown';
    const userID = msg.from.id;

    await updatePhoneNumber(phoneNumber, userID);
});

// –ù–∞ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –ø–∏—Å—å–º–∞ —Ä–µ–∞–∫—Ü–∏—è
bot.on('message', async msg => {
    console.log(msg);
    const username = msg.chat.username || 'unknown';
    const chatID = msg.chat.id;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–æ—Ç–∞ (–æ—Ç–∫–∞–∑—ã–≤–∞–µ–º –≤ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏)
    if (msg.from.is_bot)
        return await bot.sendMessage(ADMIN_ID, `@${username}: –û–±–Ω–∞—Ä—É–∂–µ–Ω –±–æ—Ç!!`);

    const text = msg.text || '';
    const msgType = msg.entities ? msg.entities[0].type : 'text';
    const contact = msg.contact ? msg.contact.phone_number : 0;

    if (contact !== 0) {
        checkPhoneNumber(chatID);
    }

// –ù–∞ –≤—Ä–µ–º—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    if (ADMIN_ID !== chatID || chatID !== '801384711') {
        await bot.sendMessage(chatID, `–ë–æ—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ WhatsApp -- wa.me/77776886396`);
        await bot.sendMessage(ADMIN_ID, `–ù–æ–≤—ã–π –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - {@${username} | ${chatID}} - ${text}`);
        return;
    }
//---------------------

    if (msgType === 'bot_command') {
        // –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if (text === '/start') {
            await sayHello(chatID);
        }

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ë–ñ–£
        if (text === '/reset') {
            await sayHello(chatID, true)
        }
    } else {
        // –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∞–¥–º–∏–Ω—É
        await notifyAdmin(ADMIN_ID, username, text);
    }


    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db.get('SELECT * FROM users WHERE user_id = ?', [chatID], async (err, row) => {
        //
        if (err) await console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err);

        // –î–æ–±–∞–≤–ª—è—é –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (!row) await giveMeYourPhoneNumber(chatID, username);
    });

});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const updatePhoneNumber = async (phoneNumber, userID) => {
    try {
        await db.run('UPDATE users SET phone_number = ? WHERE user_id = ?', [phoneNumber, userID]);
        console.log(`–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userID}`);
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err);
        bot.sendMessage(userID, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≤–∞—à–µ–≥–æ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
    }
};

// –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Å–∞
async function sayHello(chatID, reset = false) {
    const helloMsg = '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ ¬´Food Options¬ª!\n\n' +
        '–Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –∏ –≤–∫—É—Å–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è. –ú–æ—è –º–∏—Å—Å–∏—è - —É–ø—Ä–æ—Å—Ç–∏—Ç—å –≤–∞—à –≤—ã–±–æ—Ä –∏ –æ–±–µ—Å–ø–µ—á–∏—Ç—å –≤–∞—Å —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∏ –≤–∫—É—Å–Ω—ã–º–∏ –±–ª—é–¥–∞–º–∏, —É—á–∏—Ç—ã–≤–∞—è –≤–∞—à –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∫–∞–ª–æ—Ä–∞–∂ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∑–¥–æ—Ä–æ–≤—å—è.\n\n' +
        '–ß—Ç–æ –º—ã –º–æ–∂–µ–º –¥–ª—è –≤–∞—Å —Å–¥–µ–ª–∞—Ç—å\n' +
        'üí† –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –∫–∞–ª–æ—Ä–∞–∂, —É—á–∏—Ç—ã–≤–∞—è –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è.\n' +
        'üí† –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ–Ω—é, –∏—Å–∫–ª—é—á–∏–≤ –ø—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç –∏–∑-–∑–∞ —è–∑–≤, –≥–∞—Å—Ç—Ä–∏—Ç–∞, –ª–∞–∫—Ç–æ–∑–Ω–æ–π –Ω–µ–ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ—Å—Ç–∏ –∏ –¥—Ä—É–≥–∏—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π.\n' +
        'üí† –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –±–ª—é–¥, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤–∞—à–∏–º –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º –∏ –≤–∫—É—Å–∞–º.\n' +
        'üí† –ü–æ–¥—Å–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≤–∞—à–∏–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º.\n' +
        'üí† –î–µ—Ä–∂–∞—Ç—å –≤–∞—Å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π, —Å–∫–∏–¥–æ–∫ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –¥–æ—Å—Ç–∞–≤–∫–∏.\n\n' +
        '–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–∏–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –≤ Instagram: https://www.instagram.com/foodoptions.kz/\n\n' +
        '–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø–æ–º–æ—â—å, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è. –ú—ã —Ç–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ WhatsApp: https://wa.me/77776886396\n\n' +
        '–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞ –∏ –∑–∞–±–æ—Ç—ã –æ —Å–≤–æ–µ–º –∑–¥–æ—Ä–æ–≤—å–µ! üçΩÔ∏èüåø';

    const start_settings = '–î–ª—è –ø—Ä–∏–º–µ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Å—á—ë—Ç–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –≤–∞—Å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Å—Ç—É—é –∞–Ω–∫–µ—Ç—É, –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –Ω–∏–∂–µ.\n\n' +

    if (reset === false) {
        await bot.sendMessage(chatID, helloMsg);
    }

    await bot.sendMessage(chatID, start_settings);
    await askMale(chatID);
}

// –í–æ–ø—Ä–æ—Å –ø—Ä–æ –ø–æ–ª
async function askMale(chatID){
    // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
    const genderKeyboard  = {
        reply_markup: {
            one_time_keyboard: true,
            keyboard: [
                [
                    { text: '–ú—É–∂—Å–∫–æ–π'},
                    { text: '–ñ–µ–Ω—Å–∫–∏–π'}
                ]
            ],
        },
    };

    await bot.sendMessage(chatID, '–í—ã –º—É–∂—á–∏–Ω–∞ –∏–ª–∏ –∂–µ–Ω—â–∏–Ω–∞?', genderKeyboard);
}

// –í–æ–ø—Ä–æ—Å –ø—Ä–æ –≤–µ—Å
async function askWeight(chatID){

}

// –í–æ–ø—Ä–æ—Å –ø—Ä–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é
async function askActive(chatID){
    const activeKeyboard = [
        [ Markup.button("üë©‚Äçüíª –ë—ã—Ç–æ–≤–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å (—Å–∏–¥—è—á–∞—è —Ä–∞–±–æ—Ç–∞) üè†")],
        [ Markup.button("üèãÔ∏è‚Äç‚ôÇÔ∏è –§–∏—Ç–Ω–µ—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 3 —Ä–∞–∑–∞/–Ω–µ–¥–µ–ª—é üí™") ],
        [ Markup.button("üèãÔ∏è‚Äç‚ôÄÔ∏è –§–∏—Ç–Ω–µ—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 4-5 —Ä–∞–∑/–Ω–µ–¥–µ–ª—é üí™") ],
        [ Markup.button("üèãÔ∏è‚Äç‚ôÇÔ∏è –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 4-5 —Ä–∞–∑/–Ω–µ–¥–µ–ª—é üî•")],
        [ Markup.button("üèãÔ∏è‚Äç‚ôÄÔ∏è –§–∏—Ç–Ω–µ—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 6 —Ä–∞–∑/–Ω–µ–¥–µ–ª—é üí¶")],
        [ Markup.button("üèãÔ∏è‚Äç‚ôÇÔ∏è –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 6 —Ä–∞–∑/–Ω–µ–¥–µ–ª—é üí¶")],
        [ Markup.button("üèãÔ∏è‚Äç‚ôÄÔ∏èüåû –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 6 —Ä–∞–∑/–Ω–µ–¥–µ–ª—é (2 —Ä–∞–∑–∞/–¥–µ–Ω—å) üí¶üåô")]
    ];

    const active = '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –¥–ª—è –≤–∞—Å –≤–∞—Ä–∏–∞–Ω—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏?';

    await bot.sendMessage(chatID, active, activeKeyboard);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ user_id
async function checkPhoneNumber(chatID) {
    db.get('SELECT phone_number FROM users WHERE user_id = ?', [chatID], (err, row) => {
        if (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err);
            return;
        }

        if (row && row.phone_number) {
            console.log('–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', row.phone_number);
        } else {
            // –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            const keyboard = {
                reply_markup: {
                    one_time_keyboard: true,
                    keyboard: [[{ text: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞', request_contact: true }]],
                },
            };
            bot.sendMessage(chatID, '–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞:', keyboard);
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async function giveMeYourPhoneNumber(chatID, username) {
    const keyboard = {
        reply_markup: {
            one_time_keyboard: true,
            keyboard: [[{ text: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞', request_contact: true }]],
        },
    };
    await bot.sendMessage(chatID, '–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª!', keyboard);

    db.run('INSERT OR IGNORE INTO users (user_id, username) VALUES (?, ?)', [chatID, username], err => {
        if (err) console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:', err);
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
async function notifyAdmin(chatID, username, text) {
    if (ADMIN_ID !== chatID) {
        const message = `@${username || chatID}: ${text}`;
        await bot.sendMessage(ADMIN_ID, message);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è username –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ user_id
async function updateUsernameInDatabase(userID, newUsername) {
    db.run('UPDATE users SET username = ? WHERE user_id = ?', [newUsername, userID], err => {
        if (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ username –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err);
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–∞
async function validateAndFormatGender(genderInput) {
    const maleIdentifiers = ['–º', '–º—É–∂—á–∏–Ω–∞', 'male', 'm'];
    const femaleIdentifiers = ['–∂', '–∂–µ–Ω—â–∏–Ω–∞', 'female', 'f', 'w'];

    genderInput = genderInput.toLowerCase().trim();

    if (maleIdentifiers.includes(genderInput)) {
        return '–ú';
    } else if (femaleIdentifiers.includes(genderInput)) {
        return '–ñ';
    } else {
        return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∏ –æ–¥–Ω–æ–º—É –∏–∑ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function updateGenderDatabase(userId, genderInput) {
    const validatedGender = validateAndFormatGender(genderInput);

    if (validatedGender !== null) {
        db.run('UPDATE users SET gender = ? WHERE user_id = ?', [validatedGender, userId], err => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–ª–∞:', err);
            }
        });
    } else {
        console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª–∞:', genderInput);
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º –≤–≤–æ–¥–µ
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤–µ—Å–∞
async function validateWeight(weight) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–µ—Å - —ç—Ç–æ —á–∏—Å–ª–æ
    const weightNumber = parseFloat(weight);
    if (isNaN(weightNumber)) {
        return false;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–µ—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
    if (weightNumber < 30 || weightNumber > 250) {
        return false;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –≤–µ—Å–∞ –Ω–µ –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
    const weightString = weightNumber.toString();
    const decimalPointIndex = weightString.indexOf('.');
    if (decimalPointIndex !== -1 && weightString.length - decimalPointIndex - 1 > 1) {
        return false;
    }

    return true;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–µ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function updateWeightDatabase(userId, newWeight) {
    if (validateWeight(newWeight)) {
        db.run('UPDATE users SET body_weight = ? WHERE user_id = ?', [newWeight, userId], err => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≤–µ—Å–∞:', err);
            }
        });
    } else {
        console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–µ—Å–∞:', newWeight);
        // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Ç–æ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–µ—Å
        await bot.sendMessage(userId, `–í–µ—Å `);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∂–∏—Ä–∞
async function validateAndFormatBodyFat(fatPercentage) {
    let formattedFat = parseFloat(fatPercentage);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ–Ω—Ç –∂–∏—Ä–∞ - —ç—Ç–æ —á–∏—Å–ª–æ
    if (isNaN(formattedFat)) {
        return null;
    }

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç 0.XX, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ XX
    if (formattedFat >= 1 && formattedFat <= 100) {
        formattedFat /= 100;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ–Ω—Ç –∂–∏—Ä–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥–æ–ø—É—Å—Ç–∏–º–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
    if (formattedFat < 0.09 || formattedFat > 0.4) {
        return null;
    }

    return formattedFat;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∂–∏—Ä–∞
async function updateFatDatabase(userId, newFat) {
    const validatedFat = validateAndFormatBodyFat(newFat);

    if (validatedFat !== null) {
        db.run('UPDATE users SET body_fat_percentage = ? WHERE user_id = ?', [validatedFat, userId], err => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∂–∏—Ä–∞:', err);
            }
        });
    } else {
        console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∂–∏—Ä–∞:', newFat);
        // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Ç–æ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –∂–∏—Ä–∞
    }
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
async function validateAndGetActivityCoefficient(activityDescription) {
    const activityCoefficients = {
        '–ë—ã—Ç–æ–≤–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å (—Å–∏–¥—è—á–∞—è —Ä–∞–±–æ—Ç–∞)': 1.2,
        '–§–∏—Ç–Ω–µ—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 3 —Ä–∞–∑–∞/–Ω–µ–¥–µ–ª—é': 1.38,
        '–§–∏—Ç–Ω–µ—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 4-5 —Ä–∞–∑/–Ω–µ–¥–µ–ª—é': 1.46,
        '–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 4-5 —Ä–∞–∑/–Ω–µ–¥–µ–ª—é': 1.55,
        '–§–∏—Ç–Ω–µ—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 6 —Ä–∞–∑/–Ω–µ–¥–µ–ª—é': 1.64,
        '–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 6 —Ä–∞–∑/–Ω–µ–¥–µ–ª—é': 1.73,
        '–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 6 —Ä–∞–∑/–Ω–µ–¥–µ–ª—é (2 —Ä–∞–∑–∞/–¥–µ–Ω—å)': 1.9
    };

    return activityCoefficients[activityDescription] || null;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
async function updateActivityDatabase(userId, activityDescription) {
    const newActivityCoefficient = validateAndGetActivityCoefficient(activityDescription);

    if (newActivityCoefficient !== null) {
        db.run('UPDATE users SET physical_activity_coefficient = ? WHERE user_id = ?', [newActivityCoefficient, userId], err => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', err);
            }
        });
    } else {
        console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', activityDescription);
        // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Ç–æ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è state
async function validateAndFormatState(stateInput) {
    const loseWeightIdentifiers = ['–ø–æ—Ö—É–¥–µ—Ç—å', '–º–µ–Ω—å—à–µ', '—É–º–µ–Ω—å—à–∏—Ç—å'];
    const gainWeightIdentifiers = ['–ø–æ—Ç–æ–ª—Å—Ç–µ—Ç—å', '–±–æ–ª—å—à–µ', '—É–≤–µ–ª–∏—á–∏—Ç—å'];

    stateInput = stateInput.toLowerCase().trim();

    if (loseWeightIdentifiers.includes(stateInput)) {
        return '–ü–æ—Ö—É–¥–µ—Ç—å';
    } else if (gainWeightIdentifiers.includes(stateInput)) {
        return '–ü–æ—Ç–æ–ª—Å—Ç–µ—Ç—å';
    } else {
        return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∏ –æ–¥–Ω–æ–º—É –∏–∑ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function updateStateDatabase(userId, stateInput) {
    const validatedState = validateAndFormatState(stateInput);

    if (validatedState !== null) {
        db.run('UPDATE users SET state = ? WHERE user_id = ?', [validatedState, userId], err => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–ª–∏:', err);
            }
        });
    } else {
        console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ü–µ–ª–∏:', stateInput);
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º –≤–≤–æ–¥–µ
    }
}

// –§—É–Ω–∫—Ü–∏—è –≤—ã—Å—á–µ—Ç–∞ –∫–∞–ª–æ—Ä–∏–π
async function calculateCalories(userId) {
    // –†–∞—Å—à–∏—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–∞–∫–∂–µ –ø–æ–ª–µ state
    db.get('SELECT body_weight, body_fat_percentage, physical_activity_coefficient, state FROM users WHERE user_id = ?', [userId], async (err, row) => {
        if (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', err);
            return;
        }
        if (row) {
            const { body_weight, body_fat_percentage, physical_activity_coefficient, state } = row;

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã
            if (body_weight && body_fat_percentage && physical_activity_coefficient) {
                // –í—ã—á–∏—Å–ª—è–µ–º –±–∞–∑–æ–≤—É—é –∫–∞–ª–æ—Ä–∏–π–Ω—É—é –Ω–æ—Ä–º—É
                const leanBodyMass = body_weight - (body_weight * body_fat_percentage);
                let calories = ((body_weight - leanBodyMass) * 23) * physical_activity_coefficient;

                // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ü–µ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (state === '–ü–æ—Ö—É–¥–µ—Ç—å') {
                    calories -= 300;
                } else if (state === '–ü–æ—Ç–æ–ª—Å—Ç–µ—Ç—å') {
                    calories += 300;
                }

                // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ calories –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                db.run('UPDATE users SET calories = ? WHERE user_id = ?', [calories, userId], err => {
                    if (err) {
                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞–ª–æ—Ä–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err);
                    }
                });
            } else {
                console.error('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∫–∞–ª–æ—Ä–∏–π.');
                await bot.sendMessage(userId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –∫–∞–ª–æ—Ä–∏–π, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å—ë –µ—â—ë —Ä–∞–∑!');
            }
        }
    });
}

/***************************************
 ***        –ü–û–î–°–ß–Å–¢ –°–¢–û–ò–ú–û–°–¢–ò       ****
****************************************/
// –°–ª–æ–≤–∞—Ä—å —Ü–µ–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞–ª–æ—Ä–∏–π (–¥–ª—è –º—É–∂—á–∏–Ω)
const priceRangesMan = [
    { minCal: 1600, maxCal: 1699, pricePerDay: 6500, pricePerWeek: 33000, pricePerTwoWeekSale: 62700, pricePerTwoWeek: 66000, pricePerTreeWeekSale: 118800, pricePerTreeWeek: 132000, pricePerMonthSale: 145200, pricePerMonth: 165200 },
    { minCal: 1700, maxCal: 1779, pricePerDay: 6300, pricePerWeek: 34200, pricePerTwoWeekSale: 64980, pricePerTwoWeek: 68400, pricePerTreeWeekSale: 123120, pricePerTreeWeek: 136800, pricePerMonthSale: 150480, pricePerMonth: 171000 },
    { minCal: 1800, maxCal: 1999, pricePerDay: 6100, pricePerWeek: 35400, pricePerTwoWeekSale: 67260, pricePerTwoWeek: 70800, pricePerTreeWeekSale: 127400, pricePerTreeWeek: 141600, pricePerMonthSale: 155760, pricePerMonth: 177000 },
    { minCal: 2000, maxCal: 2199, pricePerDay: 5900, pricePerWeek: 36600, pricePerTwoWeekSale: 69540, pricePerTwoWeek: 73200, pricePerTreeWeekSale: 131760, pricePerTreeWeek: 146400, pricePerMonthSale: 161040, pricePerMonth: 183000 },
    { minCal: 2200, maxCal: 2399, pricePerDay: 5700, pricePerWeek: 37800, pricePerTwoWeekSale: 71820, pricePerTwoWeek: 75600, pricePerTreeWeekSale: 136080, pricePerTreeWeek: 151200, pricePerMonthSale: 166320, pricePerMonth: 189000 },
    { minCal: 2400, maxCal: 2600, pricePerDay: 5500, pricePerWeek: 39000, pricePerTwoWeekSale: 74100, pricePerTwoWeek: 78000, pricePerTreeWeekSale: 140400, pricePerTreeWeek: 156000, pricePerMonthSale: 171600, pricePerMonth: 195000 },
];

// –°–ª–æ–≤–∞—Ä—å —Ü–µ–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞–ª–æ—Ä–∏–π (–¥–ª—è –∂–µ–Ω—â–∏–Ω)
const priceRangesWoman = [
    { minCal: 1150, maxCal: 1309, pricePerDay: 4800, pricePerWeek: 28800, pricePerTwoWeekSale: 57600, pricePerTwoWeek: 57600, pricePerTreeWeekSale: 103680, pricePerTreeWeek: 115200, pricePerMonthSale: 126720, pricePerMonth: 144000 },
    { minCal: 1310, maxCal: 1509, pricePerDay: 4900, pricePerWeek: 29400, pricePerTwoWeekSale: 58800, pricePerTwoWeek: 58800, pricePerTreeWeekSale: 105680, pricePerTreeWeek: 117600, pricePerMonthSale: 129360, pricePerMonth: 147000 },
    { minCal: 1510, maxCal: 1609, pricePerDay: 5000, pricePerWeek: 30000, pricePerTwoWeekSale: 60000, pricePerTwoWeek: 60000, pricePerTreeWeekSale: 108000, pricePerTreeWeek: 120000, pricePerMonthSale: 132000, pricePerMonth: 150200 },
    { minCal: 1610, maxCal: 1709, pricePerDay: 5200, pricePerWeek: 31200, pricePerTwoWeekSale: 62400, pricePerTwoWeek: 62400, pricePerTreeWeekSale: 112320, pricePerTreeWeek: 124800, pricePerMonthSale: 137280, pricePerMonth: 156000 },
    { minCal: 1710, maxCal: 1809, pricePerDay: 5400, pricePerWeek: 32400, pricePerTwoWeekSale: 64800, pricePerTwoWeek: 64800, pricePerTreeWeekSale: 116640, pricePerTreeWeek: 129600, pricePerMonthSale: 142560, pricePerMonth: 162000 },
    { minCal: 1810, maxCal: 1899, pricePerDay: 5600, pricePerWeek: 33600, pricePerTwoWeekSale: 67200, pricePerTwoWeek: 67200, pricePerTreeWeekSale: 120960, pricePerTreeWeek: 134400, pricePerMonthSale: 147840, pricePerMonth: 168000 },
    { minCal: 1900, maxCal: 2049, pricePerDay: 5800, pricePerWeek: 34800, pricePerTwoWeekSale: 69600, pricePerTwoWeek: 69600, pricePerTreeWeekSale: 125280, pricePerTreeWeek: 139200, pricePerMonthSale: 153120, pricePerMonth: 174000 },
    { minCal: 2050, maxCal: 2200, pricePerDay: 6000, pricePerWeek: 36000, pricePerTwoWeekSale: 72000, pricePerTwoWeek: 72000, pricePerTreeWeekSale: 129600, pricePerTreeWeek: 144000, pricePerMonthSale: 158400, pricePerMonth: 180000 },
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ü–µ–Ω—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–∞–ª–æ—Ä–∏–π –∏ –ø–æ–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function getPriceBasedOnCaloriesAndGender(calories, gender) {
    const priceRanges = gender === '–ú' ? priceRangesMan : priceRangesWoman;
    const priceInfo = priceRanges.find(range => calories >= range.minCal && calories <= range.maxCal);
    return priceInfo ? { pricePerWeek: priceInfo.pricePerWeek, pricePerMonth: priceInfo.pricePerMonth } : null;
}

// –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∏–∑–≤–ª–µ–∫–∞–µ—Ç –ø–æ–ª –∏ –∫–∞–ª–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–Ω–µ
async function calculateAndDisplayPrice(userId) {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db.get('SELECT gender, calories FROM users WHERE user_id = ?', [userId], async (err, row) => {
        if (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', err);
            return;
        }
        if (row) {
            const {gender, calories} = row;

            // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–Ω–µ
            const priceEstimate = getPriceBasedOnCaloriesAndGender(calories, gender);

            if (priceEstimate) {
                // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–Ω–µ
                const message = `üåü –†–∞–¥—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –í–∞–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –ø–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–π —Ä–∞—Ü–∏–æ–Ω –ø–∏—Ç–∞–Ω–∏—è! üçΩÔ∏è

üëâ –ù–∞ –Ω–µ–¥–µ–ª—é (6 –¥–Ω–µ–π) –≤—Å–µ–≥–æ –∑–∞ ${priceEstimate.pricePerDay} —Ä—É–±. - –æ—Ç–ª–∏—á–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∏ –æ—Ü–µ–Ω–∏—Ç—å! (–í —Å—É—Ç–∫–∏ –≤—Å–µ–≥–æ –∑–∞ ${priceEstimate.pricePerDay})
üëâ 2 –Ω–µ–¥–µ–ª–∏ (12 –¥–Ω–µ–π) —Å 5% —Å–∫–∏–¥–∫–æ–π: ${priceEstimate.pricePerTwoWeekSale} —Ä—É–±. - –∏–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –∫ –ø–µ—Ä–µ–º–µ–Ω–∞–º. (–±–µ–∑ —Å–∫–∏–¥–∫–∏ - ${priceEstimate.pricePerTwoWeek})
üëâ 3 –Ω–µ–¥–µ–ª–∏ (24 –¥–Ω—è) —Å 10% —Å–∫–∏–¥–∫–æ–π: ${priceEstimate.pricePerTreeWeekSale} —Ä—É–±. - –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —É–∂–µ –Ω–∞ –ø—É—Ç–∏ –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏! (–±–µ–∑ —Å–∫–∏–¥–∫–∏ - ${priceEstimate.pricePerTreeWeek})
üëâ –ò –ø–æ–ª—É—á–∏—Ç–µ –º–µ—Å—è—Ü (30 –¥–Ω–µ–π) —Å–æ —Å–∫–∏–¥–∫–æ–π 12%: ${priceEstimate.pricePerMonthSale} —Ä—É–±. - –¥–ª—è –Ω–∞–∏–±–æ–ª–µ–µ —Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã—Ö –∏ —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω—ã—Ö! (–±–µ–∑ —Å–∫–∏–¥–∫–∏ - ${priceEstimate.pricePerMonth})

‚ú® –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—à—É –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–∞ 6 –¥–Ω–µ–π, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–µ—Ä–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Ä–∞–∑–Ω–∏—Ü—É! –ö–∞—á–µ—Å—Ç–≤–æ –∏ –≤–∫—É—Å –±–ª—é–¥ –í–∞—Å –ø—Ä–∏—è—Ç–Ω–æ —É–¥–∏–≤—è—Ç! üòã

üî• –ó–∞–∫–∞–∂–∏—Ç–µ —Å–µ–π—á–∞—Å –∏ –Ω–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –∫ –∑–¥–æ—Ä–æ–≤–æ–º—É –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω–∏ —É–∂–µ –∑–∞–≤—Ç—Ä–∞! üî•

–î–ª—è –∑–∞–∫–∞–∑–∞ –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ª–∏–±–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –ø–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º –∏–∑ —à–∞–ø–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è. –ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å!`;

                await bot.sendMessage(userId, message);
            } else {
                console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${userId} - –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–µ–Ω—É –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–∞–ª–æ—Ä–∏–π.`);
            }
        } else {
            console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.`);
        }
    });
}


// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db.on('error', async err => {
    console.error('–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', err);
});

// –ó–∞–∫—Ä—ã–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
process.on('exit', () => {
    db.close(err => {
        if (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', err);
        }
    });
});