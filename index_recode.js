const sqlite3 = require('sqlite3').verbose();
const db = new sqlite3.Database('users.db');
const fs = require('fs').promises;
require('dotenv').config();
// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–æ—Ç–µ
const {TELEGRAM_BOT_TOKEN, ADMIN_ID} = process.env, TelegramApi = require('node-telegram-bot-api'),
    bot = new TelegramApi(TELEGRAM_BOT_TOKEN, {polling: true});

db.run(`CREATE TABLE IF NOT EXISTS users
        (
            id                            INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id                       INTEGER UNIQUE,
            username                      TEXT,
            phone                         TEXT,
            gender                        TEXT DEFAULT '–ú',
            height                        REAL DEFAULT 0,
            middle                        REAL DEFAULT 0,
            format                        TEXT DEFAULT '–æ–±—â–∏–π',
            weight                        REAL DEFAULT 0,
            fat                           REAL DEFAULT 0,
            activity                      REAL DEFAULT 0,
            target                        TEXT DEFAULT '–ø–æ—Ö—É–¥–µ—Ç—å',
            state                         TEXT DEFAULT 'start_gender',
            calories                      REAL DEFAULT 0
        );`);

// –†–µ–∞–∫—Ü–∏—è –Ω–∞ callback
bot.on('callback_query', async (callbackQuery) => {
    const message = callbackQuery.message;
    const userId = message.chat.id;
    const callbackQueryData = callbackQuery.data;

    const [data, value] = data.split(':');

    switch (data) {
        case 'activity':
            await handleActivitySelection(userId, value);
            break;
        case 'format':
            await handleFormatSelection(userId, value);
            break;
        case '–æ–±—â–∏–π':
        case '–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π':
            await updateFormatDatabase(userId, data);
            break;

        // –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ —Å–ª—É—á–∞–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–¥–µ—Å—å
        default:
            // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞
            await bot.sendMessage(userId, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å.');
    }
});

// –†–µ–∞–∫—Ü–∏—è –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–Ω—Ç–∞–∫—Ç–∞
bot.on('contact', async (msg) => {
    const phoneNumber = msg.contact.phone;
    const username = msg.chat.username || 'unknown';
    const userID = msg.from.id;

    await updatePhoneNumber(phoneNumber, userID);
});

// –ù–∞ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –ø–∏—Å—å–º–∞ —Ä–µ–∞–∫—Ü–∏—è
bot.on('message', async msg => {
    await console.log(msg);
    const username = msg.chat.username || 'unknown';
    const chatID = msg.chat.id;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–æ—Ç–∞ (–æ—Ç–∫–∞–∑—ã–≤–∞–µ–º –≤ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏)
    if (msg.from.is_bot)
        return await bot.sendMessage(ADMIN_ID, `@${username}: –û–±–Ω–∞—Ä—É–∂–µ–Ω –±–æ—Ç!!`);

    const text = msg.text || '';
    const msgType = msg.entities ? msg.entities[0].type : 'text';
    const contact = msg.contact ? msg.contact.phone : 0;

    if (msgType === 'bot_command') {
        // –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if (text === '/start') {
            await sayHello(chatID);
        }

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ë–ñ–£
        if (text === '/reset') {
            await sayHello(chatID, true)
        }
    } else {
        // –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∞–¥–º–∏–Ω—É
        await notifyAdmin(ADMIN_ID, username, text);
    }


    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db.get('SELECT * FROM users WHERE user_id = ?', [chatID], async (err, row) => {
        //
        if (err) await logError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err);

        // –î–æ–±–∞–≤–ª—è—é –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (!row) await giveMeYourPhoneNumber(chatID, username);
    });

});

// –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Å–∞
async function sayHello(chatID, reset = false) {
    const helloMsg = '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ ¬´Food Options¬ª!\n\n' +
        '–Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –∏ –≤–∫—É—Å–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è. –ú–æ—è –º–∏—Å—Å–∏—è - —É–ø—Ä–æ—Å—Ç–∏—Ç—å –≤–∞—à –≤—ã–±–æ—Ä –∏ –æ–±–µ—Å–ø–µ—á–∏—Ç—å –≤–∞—Å —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∏ –≤–∫—É—Å–Ω—ã–º–∏ –±–ª—é–¥–∞–º–∏, —É—á–∏—Ç—ã–≤–∞—è –≤–∞—à –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∫–∞–ª–æ—Ä–∞–∂ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∑–¥–æ—Ä–æ–≤—å—è.\n\n' +
        '–ß—Ç–æ –º—ã –º–æ–∂–µ–º –¥–ª—è –≤–∞—Å —Å–¥–µ–ª–∞—Ç—å\n' +
        'üí† –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –∫–∞–ª–æ—Ä–∞–∂, —É—á–∏—Ç—ã–≤–∞—è –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è.\n' +
        'üí† –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ–Ω—é, –∏—Å–∫–ª—é—á–∏–≤ –ø—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç –∏–∑-–∑–∞ —è–∑–≤, –≥–∞—Å—Ç—Ä–∏—Ç–∞, –ª–∞–∫—Ç–æ–∑–Ω–æ–π –Ω–µ–ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ—Å—Ç–∏ –∏ –¥—Ä—É–≥–∏—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π.\n' +
        'üí† –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –±–ª—é–¥, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤–∞—à–∏–º –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º –∏ –≤–∫—É—Å–∞–º.\n' +
        'üí† –ü–æ–¥—Å–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≤–∞—à–∏–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º.\n' +
        'üí† –î–µ—Ä–∂–∞—Ç—å –≤–∞—Å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π, —Å–∫–∏–¥–æ–∫ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –¥–æ—Å—Ç–∞–≤–∫–∏.\n\n' +
        '–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–∏–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –≤ Instagram: https://www.instagram.com/foodoptions.kz/\n\n' +
        '–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø–æ–º–æ—â—å, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è. –ú—ã —Ç–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ WhatsApp: https://wa.me/77776886396\n\n' +
        '–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞ –∏ –∑–∞–±–æ—Ç—ã –æ —Å–≤–æ–µ–º –∑–¥–æ—Ä–æ–≤—å–µ! üçΩÔ∏èüåø';

    const start_settings = '–î–ª—è –ø—Ä–∏–º–µ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Å—á—ë—Ç–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –≤–∞—Å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Å—Ç—É—é –∞–Ω–∫–µ—Ç—É, –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –Ω–∏–∂–µ.\n\n' +
        '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –±—É–¥–µ—Ç —É–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:' +
        '    ü§∏‚öñÔ∏è –û–±—â–∞—è –º–∞—Å—Å–∞ —Ç–µ–ª–∞ / –∫–≥ ‚öñÔ∏è\n' +
        '    ü§∏‚Äç‚ôÄÔ∏è % –∂–∏—Ä–∞ ü§∏‚Äç‚ôÄÔ∏è\n' +
        '    üçΩÔ∏è –î–µ—Ñ–∏—Ü–∏—Ç –∫–∞–ª–æ—Ä–∏–π üìâ\n' +
        '    üçî –ü—Ä–æ—Ñ–∏—Ü–∏—Ç –∫–∞–ª–æ—Ä–∏–π üìà';

    if (reset === false) {
        await bot.sendMessage(chatID, helloMsg);
    }

    db.run('UPDATE users SET state = ? WHERE user_id = ?', ['start_quick', chatID], async err => {
        if (err) {
            await logError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞', err);
        }
    });

    await bot.sendMessage(chatID, start_settings);
    await askMale(chatID);
}

/*********************************************************
 *****    *****            –ü–†–û–ß–ï–ï            *****   *****
 *********************************************************/
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
async function notifyAdmin(chatID, username, text) {
    if (ADMIN_ID !== chatID) {
        const message = `@${username || chatID}: ${text}`;
        await bot.sendMessage(ADMIN_ID, message);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è username –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ user_id
async function updateUsernameInDatabase(userID, newUsername) {
    db.run('UPDATE users SET username = ? WHERE user_id = ?', [newUsername, userID], async err => {
        if (err) {
            await logError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ username –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err);
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
async function getNextStates(userID){
    let currentState = "", currentFormat = "";
    db.get('SELECT state, format FROM users WHERE user_id = ?', [userID], (err, row) => {
        if (err) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏
            logError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', err);
            return;
        }

        if (row) {
            currentState = row.state; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
            currentFormat = row.format; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
        } else {
            logError('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö'); // –°–∏—Ç—É–∞—Ü–∏—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
            return;
        }
    });

    // –°–ø–∏—Å–æ–∫ —Å–æ—Å—Ç–æ—è–Ω–∏–π –≤ –ø–æ—Ä—è–¥–∫–µ –∏—Ö —Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    const allStatesStart = [
        'start_quick', 'start_gender', 'start_middle', 'start_height', 'start_format',
    ];

    const allStatesDefaultStart = [
        'start_choose_weight', 'start_price',
    ];

    const allStatesIndividualStart = [
        'start_weight', 'start_fat', 'start_activity', 'start_target', 'start_calories',
    ];

    const allStatesDefault = [
        'gender', 'middle', 'height', 'format', 'choose_weight', 'price', 'weight', 'fat', 'activity', 'target', 'delivery',
    ];

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    let newState = "", currentIndex = allStatesDefault.indexOf(currentState);

    if (currentIndex !== -1 && currentIndex !== allStatesDefault.length - 1) {
        newState = allStatesDefault[currentIndex + 1];
    }
    else {
        if (currentIndex === allStatesDefault.length - 1) {
            newState = 'default';
        }
        else {
            currentIndex = allStatesStart.indexOf(currentState);
            if (currentIndex !== -1 && currentIndex !== allStatesStart.length - 1) { // –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Ö–æ–¥–∏—Ç –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ
                newState = allStatesStart[currentIndex + 1];
            } else if (currentIndex === allStatesStart.length - 1) { // –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Ö–æ–¥–∏—Ç –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –∏ –æ–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ
                if (currentFormat == "–æ–±—â") { // –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–π —Ñ–æ—Ä–º–∞—Ç - –æ–±—â–∏–π
                    newState = allStatesDefaultStart[0];
                } else if (currentFormat == "–∏–Ω–¥–∏–≤") { // –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–π —Ñ–æ—Ä–º–∞—Ç - –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π
                    newState = allStatesIndividualStart[0]
                }
            } else {
                if (currentFormat == "–æ–±—â") {
                    currentIndex = allStatesDefaultStart.indexOf(currentState);
                    if (currentIndex !== -1 && currentIndex !== allStatesDefaultStart.length - 1) { // –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Ö–æ–¥–∏—Ç –≤ –æ–±—â–µ–µ
                        newState = allStatesDefaultStart[currentIndex + 1];
                    } else {
                        newState = allStatesDefault[allStatesDefault.length - 1];
                    }
                } else if (currentFormat == "–∏–Ω–¥–∏–≤") {
                    currentIndex = allStatesIndividualStart.indexOf(currentState);
                    if (currentIndex !== -1 && currentIndex !== allStatesIndividualStart.length - 1) { // –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Ö–æ–¥–∏—Ç –≤ –æ–±—â–µ–µ
                        newState = allStatesIndividualStart[currentIndex + 1];
                    } else {
                        newState = allStatesDefault[allStatesDefault.length - 1];
                    }
                }
            }
        }
    }


db.run('UPDATE users SET state = ? WHERE user_id = ?', [newState, userID], async err => {
    if (err) {
        await logError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ username –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err);
    }
});
}

/*********************************************************
 ***    *****   –í–ê–ñ–ù–´–ï –ß–ê–°–¢–ò –î–õ–Ø –†–ê–ë–û–¢–´       ****   *****
 *********************************************************/
// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db.on('error', async err => {
    await notifyAdmin(ADMIN_ID, '', '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–µ–ª–∞ –≥–æ–≤–Ω–∞');
    await logError('–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', err);
});

// –ó–∞–∫—Ä—ã–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
process.on('exit', async () => {
    db.close(async err => {
        if (err) {
            await notifyAdmin(ADMIN_ID, '', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
            await logError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', err)
        }
    });
});

/*********************************************************
 ***    *****           –¢–ï–õ–ï–§–û–ù               ****   *****
 *********************************************************/
// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const updatePhoneNumber = async (phoneNumber, userID) => {
    try {
        await db.run('UPDATE users SET phone = ? WHERE user_id = ?', [phoneNumber, userID]);
        await logError(`–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userID}`);
    } catch (err) {
        await logError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err);
        await bot.sendMessage(userID, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≤–∞—à–µ–≥–æ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
    }
};

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥ —Ñ–∞–π–ª
async function logError(err) {
    const errorMessage = `[${new Date().toISOString()}] ${err}\n`;
    try {
        await fs.appendFile('error.log', errorMessage);
    } catch (fileErr) {
        await notifyAdmin(ADMIN_ID, '', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥-—Ñ–∞–π–ª');
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥-—Ñ–∞–π–ª', fileErr);
    }
}
